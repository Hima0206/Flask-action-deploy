name: CICD Pipeline

on:
  push:
    branches: main

env:
  KUBECONFIG: ${{ secrets.KUBECONFIG }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: himateja0206/flaskdemo:latest
          context: .
          file: app/Dockerfile

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          minikube start
      - name: Debug KUBECONFIG Secret
        run: |
         if [ -z "$KUBECONFIG" ]; then
           echo "KUBECONFIG is not set. Ensure it is configured properly in secrets.";
           exit 1;
         elif [ ! -f "$KUBECONFIG" ]; then
           echo "KUBECONFIG file does not exist at $KUBECONFIG.";
           exit 1;
         else
           echo "KUBECONFIG is set and file exists.";
           cat $KUBECONFIG;
           fi

      - name: Validate KUBECONFIG
        run: |
          if [ -z "$KUBECONFIG" ] || [ ! -f "$KUBECONFIG" ]; then
            echo "Error: KUBECONFIG file does not exist or is not set.";
            exit 1;
          fi

      - name: Deployment step
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "KUBECONFIG exists. Proceeding with deployment..."
          kubectl config view

      - name: Debug Kubernetes Configuration
        run: |
          if [ -f "$KUBECONFIG" ]; then
            echo "KUBECONFIG exists. Validating configuration..."
            cat $KUBECONFIG
            kubectl config view
          else
            echo "Error: KUBECONFIG file does not exist."
            exit 1
          fi

      - name: Deploy to k8s
        run: |
          kubectl cluster-info
          kubectl apply -f deployment.yaml
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
